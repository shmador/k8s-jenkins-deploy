apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "myapp.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "myapp.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "myapp.name" . }}
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.containerPort }}
          resources:
            requests:
              cpu:    "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
            limits:
              cpu:    "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
          readinessProbe:
            httpGet:
              path: {{ .Values.readiness.path }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
            failureThreshold: {{ .Values.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: {{ .Values.liveness.path }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.usernameKey }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.passwordKey }}
          volumeMounts:
            - name: html-storage
              mountPath: /usr/share/nginx/html
      volumes:
        - name: html-storage
          persistentVolumeClaim:
            claimName: {{ .Values.pvcName }}

